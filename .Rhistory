trajr::TrajLength(trj)
trajr::TrajDuration(trj)
trajr::TrajStepLengths(trj)
trajr::TrajGetUnits(trj)
View(julio_2020_07_13_1_6)
trajr::TrajGetNCoords(trj)
write.csv(trj, "/Users/85412/Desktop/trj.csv")
trajr::TrajMeanVelocity(trj)
TrackReconstruction::CalcBearing(19.4737, -99.1460, 19.4680, -99.1439) #en km
TrackReconstruction::CalcDistance(19.4737, -99.1460, 19.4680, -99.1439) #en km
SF <- c(-99.1460, 19.4737)
AM <- c(-99.1439, 19.4680)
geosphere::distCosine(SF, AM) #En metros
geosphere::bearing(SF, AM) #No sé en qué unidades está el resultado.
geosphere::distCosine(AM,SF) #En metros
geosphere::bearing(AM, SF) #No sé en qué unidades está el resultado.
View(trj)
View(julio_2020_07_13_1_6)
geosphere::bearing(AM, SF) #No sé en qué unidades está el resultado.
geosphere::bearing(SF, AM) #No sé en qué unidades está el resultado.
View(trj)
SF <- c(-99.1532, 19.4927)
AM <- c(-99.1545, 19.4961)
geosphere::distCosine(SF, AM) #En metros
geosphere::bearing(SF, AM) #No sé en qué unidades está el resultado.
library(swirl)
install.packages("swirl")
geosphere::bearing(SF, AM) #No sé en qué unidades está el resultado.
geosphere::bearing(AM, SF) #No sé en qué unidades está el resultado.
library(swirl)
swirl()
1
1
swirl()
head(fflags)
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
cls_list <- sapply(flags, class)
cls_list <- sapply(flags, class)
cls_list <- sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply()
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,
| 19:23]
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, lapply)
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
print(unique_vals)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
SF <- c(-99.1532, 19.4927)
AM <- c(-99.1545, 19.4961)
geosphere::distCosine(SF, AM) #En metros
geosphere::bearing(SF, AM) #No sé en qué unidades está el resultado.
trajr::TrajStepLengths(trj)
trajr::TrajsStepLengths(trj)
trajr::TrajsStepLengths(trj)
trajr::TrajStepLengths(trj)
trajr::TrajStepLengths(trj)
trajr::TrajsStepLengths(trj)
trajr::TrajStepLengths(trj, units=m)
trjs <- trajr::TrajsBuild(trj, scale = scale, units = "m")
trjs <- trajr::TrajsBuild(trj, units = "m")
trjs <- TrajsBuild(julio_2020_07_13_1_6, scale = scale, units = "m")
trjs <- trajr::TrajsBuild(julio_2020_07_13_1_6, scale = scale, units = "m")
trjs <- trajr::TrajsBuild(trj, scale = scale, units = "m")
trajr::TrajStepLengths(trj, units=m)
trajr::TrajStepLengths(trj)
View(julio_2020_07_13_1_6)
coords <- data.frame(x= c(-99.1460, -99.1439, -99.1437, -99.1444),
y= c(19.4737, 19.4680, 19.4675, 19.4631),
times= c(06:00:38, 06:01:41, 06:02:47, 06:03:51))
coords <- data.frame(x= c(-99.1460, -99.1439),
y= c(19.4737, 19.4680),
times= c(06:00, 06:01))
coords <- data.frame(x= c(-99.1460, -99.1439),
y= c(19.4737, 19.4680),
times= c(6, 7))
trj <- trajr::TrajFromCoords(coords)
plot(trj)
trajr::TrajStepLengths(trj)
TrackReconstruction::CalcDistance(19.4737, -99.1460, 19.4680, -99.1439)
library(swirl)
swirl::
swirl()
swirl()
nrow(distinct(julio13, id_vehicle=="2020-07-13"))
nrow(distinct(julio13, id_vehicle))
coords <- data.frame(x= c(-99.1460, -99.1439),
y= c(19.4737, 19.4680),
times= c(6, 7))
trj <- trajr::TrajFromCoords(coords)
plot(trj)
trajr::TrajStepLengths(trj)
trajr::TrajStepLengths(trj)
TrackReconstruction::CalcDistance(19.4737, -99.1460, 19.4680, -99.1439)
SF <- c(-99.1532, 19.4927)
AM <- c(-99.1545, 19.4961)
geosphere::distCosine(SF, AM) #En metros
coords <- data.frame(x= c(-99.1460, -99.1439),
y= c(19.4737, 19.4680),
times= c(6, 7))
trj <- trajr::TrajFromCoords(coords)
plot(trj)
coords <- data.frame(x = julio_2020_07_13_1_6$LONGITUDE,
y = julio_2020_07_13_1_6$LATITUDE,
times = julio_2020_07_13_1_6$CST6CDT)
trj <- trajr::TrajFromCoords(coords)
plot(trj)
trajr::TrajStepLengths(trj)
print(summary(trajr::TrajStepLengths(trj) ))
trajr::TrajAngles(trj)
julio_2020_07_13_1_6
head(julio_2020_07_13_1_6)
head(julio_2020_07_13_1_6$LONGITUDE)
head(julio_2020_07_13_1_6$LLATITUDE)
head(julio_2020_07_13_1_6$LATITUDE)
head(julio_2020_07_13_1_6$CST6CDT)
coords <- data.frame(x= c(-99.1460, -99.1439, -99.1437),
y= c(19.4737, 19.4680, 19.4675),
times= c(0, 1, 2))
trj <- trajr::TrajFromCoords(coords)
plot(trj)
trajr::TrajStepLengths(trj)
coords <- data.frame(x= c(-99.1460, -99.1439, -99.1437, -99.1444),
y= c(19.4737, 19.4680, 19.4675, 19.4631),
times= c(0, 1, 2, 4))
trj <- trajr::TrajFromCoords(coords)
plot(trj)
trajr::TrajStepLengths(trj)
TrackReconstruction::CalcDistance(19.4675, -99.1437, 19.4631, -99.1444)
View(trj)
coords
P1 <- c(-99.1437, 19.4675)
P2 <- c(-99.1444, 19.4631)
geosphere::distCosine(SF, AM) #En metros
geosphere::bearing(SF, AM) #No sé en qué unidades está el resultado.
geosphere::distCosine(P1, P2)#En metros
geosphere::bearing(P1, P2) #No sé en qué unidades está el resultado.
trajr::TrajStepLengths(trj)
P3 <- c(-99.1437, 19.4675)
P4 <- c(-99.1444, 19.4631)
geosphere::distCosine(P1, P2)#En metros
geosphere::bearing(P3, P4) #No sé en qué unidades está el resultado.
coords
geosphere::distCosine(P2, P3)
trajr::TrajStepLengths(trj)
geosphere::distCosine(P1, P2)#En metros
P1 <- c(-99.1460, 19.4737)
P2 <- c(-99.1439, 19.4680)
P3 <- c(-99.1437, 19.4675)
P4 <- c(-99.1444, 19.4631)
geosphere::distCosine(P1, P2)#En metros
geosphere::distCosine(P2, P3)#En metros
geosphere::distCosine(P3, P4)#En metros
trajr::TrajStepLengths(trj)
gtfs_estatico<-sf::st_read("/Users/85412/Desktop/gtfs_estatico/gtfs_estatico.shp")
gtfs_estatico <- gtfs_estatico %>%  select(agencia, ruta, geometry) %>% filter(agencia == "METROBUS")
library(dplyr)
gtfs_estatico <- gtfs_estatico %>%  select(agencia, ruta, geometry) %>% filter(agencia == "METROBUS")
plot(gtfs_estatico)
View(gtfs_estatico)
gtfs_estatico <- NULL
gtfs_estatico<-sf::st_read("/Users/85412/Desktop/gtfs_estatico/gtfs_estatico.shp")
gtfs_estatico <- gtfs_estatico %>%  select(agencia, ruta, geometry) %>% filter(agencia == "METROBUS")
gtfs_estatico$agencia <- NULL
plot(gtfs_estatico)
julio <- readr::read_csv("C:/Users/85412/Desktop/gtfs_rt/julio.csv")
julio$CST6CDT <- lubridate::as_datetime(julio$TIMESTAMP, tz="CST6CDT")
colnames(julio)[9] <- "LATITUDE"
julio$LATITUDE <- stringr::str_sub(julio$LATITUDE, 10,-1)
julio$LATITUDE <- as.numeric(julio$LATITUDE)
julio$VEHICLE <- stringr::str_sub(julio$VEHICLE, 4,-1)
julio$as_date<- lubridate::as_date(julio$CST6CDT)
julio$as_hour <- lubridate::hour(julio$CST6CDT)
julio$id_vehicle <- paste(julio$as_date, julio$VEHICLE, sep="-")
julio <- julio %>%  select(id_vehicle, Id, TIMESTAMP, VEHICLE, ROUTEID, STARTTIME, STARTDATE, SCHEDULE_RELATIONSHIP, LABEL, LATITUDE, LONGITUDE, BEARING, ODOMETER, SPEED, CURRENTSTATUS, LECTURA, CST6CDT, as_date, as_hour) %>% filter(as_hour == "6" | as_hour=="7" | as_hour=="8" | as_hour=="9"| as_hour=="10" | as_hour=="11"| as_hour=="12"| as_hour=="13"| as_hour=="14"| as_hour=="15"| as_hour=="16"| as_hour=="17"| as_hour=="18"| as_hour=="19" | as_hour=="20"| as_hour=="21"| as_hour=="22"| as_hour=="23")
julio13 <- julio %>%  select(id_vehicle, Id, TIMESTAMP, VEHICLE, ROUTEID, STARTTIME, STARTDATE, SCHEDULE_RELATIONSHIP, LABEL, LATITUDE, LONGITUDE, BEARING, ODOMETER, SPEED, CURRENTSTATUS, LECTURA, CST6CDT, as_date, as_hour) %>% filter(as_date == "2020-07-13")
unicos_13 <- unique(julio13$id_vehicle)
or (i in julio13$id_vehicle) {
assign(paste0("DF", i), data.frame(A=rnorm(10), B=rnorm(10)))
}
for (i in julio13$id_vehicle) {
assign(paste0("DF", i), data.frame(A=rnorm(10), B=rnorm(10)))
}
View(`DF2020-07-13-761`)
for (i in julio13$id_vehicle) {
assign(paste0("df_", i))
}
gtfs_estatico<-sf::st_read("/Users/85412/Desktop/gtfs_estatico/gtfs_estatico.shp")
gtfs_estatico <- gtfs_estatico %>%  select(agencia, ruta, geometry) %>% filter(agencia == "METROBUS")
gtfs_estatico$agencia <- NULL
plot(gtfs_estatico)
#######################
julio <- readr::read_csv("C:/Users/85412/Desktop/gtfs_rt/julio.csv")
julio$CST6CDT <- lubridate::as_datetime(julio$TIMESTAMP, tz="CST6CDT")
colnames(julio)[9] <- "LATITUDE"
julio$LATITUDE <- stringr::str_sub(julio$LATITUDE, 10,-1)
julio$LATITUDE <- as.numeric(julio$LATITUDE)
julio$VEHICLE <- stringr::str_sub(julio$VEHICLE, 4,-1)
julio$as_date<- lubridate::as_date(julio$CST6CDT)
julio$as_hour <- lubridate::hour(julio$CST6CDT)
#Identificar cantidad de id_vehicles único
julio$id_vehicle <- paste(julio$as_date, julio$VEHICLE, sep="-")
#Extraer datos de las 6 a las 23 horas
julio <- julio %>%  select(id_vehicle, Id, TIMESTAMP, VEHICLE, ROUTEID, STARTTIME, STARTDATE, SCHEDULE_RELATIONSHIP, LABEL, LATITUDE, LONGITUDE, BEARING, ODOMETER, SPEED, CURRENTSTATUS, LECTURA, CST6CDT, as_date, as_hour) %>% filter(as_hour == "6" | as_hour=="7" | as_hour=="8" | as_hour=="9"| as_hour=="10" | as_hour=="11"| as_hour=="12"| as_hour=="13"| as_hour=="14"| as_hour=="15"| as_hour=="16"| as_hour=="17"| as_hour=="18"| as_hour=="19" | as_hour=="20"| as_hour=="21"| as_hour=="22"| as_hour=="23")
#Extraer datos del 13 de julio
julio13 <- julio %>%  select(id_vehicle, Id, TIMESTAMP, VEHICLE, ROUTEID, STARTTIME, STARTDATE, SCHEDULE_RELATIONSHIP, LABEL, LATITUDE, LONGITUDE, BEARING, ODOMETER, SPEED, CURRENTSTATUS, LECTURA, CST6CDT, as_date, as_hour) %>% filter(as_date == "2020-07-13")
unicos_13 <- unique(julio13$id_vehicle)
for (i in julio13$id_vehicle) {
assign(paste0("df_", i))
}
for (i in julio13$id_vehicle) {
assign(paste0("df_",i))
}
for (i in julio13$id_vehicle) {
assign(paste0("DF", i), data.frame())
}
for (i in julio13$id_vehicle) {
assign(paste0("DF", i), data.frame(julio13$id_vehicle))
}
for (i in julio13$id_vehicle) {
assign(paste0("DF", i), data.frame(julio13$id_vehicle[i]))
}
View(`DF2020-07-13-995`)
for (i in julio13$id_vehicle) {
assign(paste0("DF", i), data.frame(julio13$id_vehicle==i))
}
for (i in julio13$id_vehicle) {
assign(paste0("DF", i), data.frame(julio13$id_vehicle==i))
}
for (i in julio13$id_vehicle) {
assign(paste0("DF", i), data.frame(julio13$id_vehicle=="i"))
}
View(`DF2020-07-13-740`)
for (i in julio13$id_vehicle) {
julio13 %>% select(id_vehicle, LONGITUDE, LATITUDE, TIMESTAMP) %>% filter(id_vehicle==i) %>% assign(paste0("DF", i), data.frame())
}
View(`DF2020-07-13-999`)
for (i in julio13$id_vehicle) {
julio13 %>% select(id_vehicle, LONGITUDE, LATITUDE, TIMESTAMP) %>% filter(id_vehicle==i)
}
install.packages("sqldf")
sqldf
sqldf::sqldf(julio13)
for (i in julio13$id_vehicle) {
filter(id_vehicle==i)
}
for (i in julio13$id_vehicle) {
filter(julio13, id_vehicle==i)
}
View(`DF2020-07-13-10001`)
for (i in julio13$id_vehicle) {
grep(i, julio13$id_vehicle)
}
grep("2020-07-17-1", julio13)
grep("2020-07-17-1", julio13$id_vehicle)
grep("2020-07-17-1", julio13$id_vehicle)
grep("2020-07-17-2", julio13$id_vehicle)
grep("2020-07-13-1", julio13$id_vehicle)
out <- lapply(julio13, function(x) subset(x, id_vehicle %in% julio13$id_vehicle))
file1 <- read.table(textConnection(julio13),header=TRUE)
sqldf::read.csv.sql("C:/Users/85412/Desktop/gtfs_rt/julio.csv")
write.csv(julio13, "/Users/85412/Desktop/gtfs_rt/julio_13.csv")
julio_13_sql<- sqldf::read.csv.sql("/Users/85412/Desktop/gtfs_rt/julio_13.csv")
View(julio_13_sql)
for (i in julio13$id_vehicle) {
paste("i") <- paste("i")[paste("i")$id_vehicle %in% julio13$id_vehicle,]
}
for (i in julio13$id_vehicle) {
paste("i") <- i
}
for (i in julio13$id_vehicle) {
paste("i") <- seq()
}
for (i in julio13$id_vehicle) {
paste("i") <- filter(i)
}
for (i in julio13$id_vehicle) {
paste("i") <- filter(julio13$id_vehicle, i)
}
for (i in julio13$VEHICLE) {
paste("i") <- filter(julio13$VEHICLE, i)
}
for (i in julio13$VEHICLE) {
paste("i") <- filter(julio13, VEHICLE== "i")
}
for (i in julio13$VEHICLE) {
paste(df, "i") <- filter(julio13, VEHICLE== "i")
}
for (i in julio13$VEHICLE) {
paste0(df, "i") <- filter(julio13, VEHICLE== "i")
}
for (i in julio13$VEHICLE) {
assign(df, "i") <- filter(julio13, VEHICLE== "i")
}
for (i in julio13$VEHICLE) {
filter(julio13, VEHICLE== "i")
}
out <- lapply(julio13, function(x) subset(x, ID %in% julio13$id_vehicle))
out <- lapply(julio13, function(x) subset(x, x %in% julio13$id_vehicle))
View(out)
out <- lapply(julio13, function(x) subset(nrow(julio13), x %in% julio13$id_vehicle))
View(out)
out <- lapply(julio13, function(x) subset(julio13[,], x %in% julio13$id_vehicle))
View(out)
out <- lapply(julio13, function(x) subset(julio13[,nrow()], x %in% julio13$id_vehicle))
out <- lapply(julio13, function(x) subset(julio13[1:-1,], x %in% julio13$id_vehicle))
out <- lapply(julio13, function(x) subset(julio13[-1,], x %in% julio13$id_vehicle))
View(out)
out <- lapply(julio13, function(x) subset(julio13, id_vehicle %in% julio13$id_vehicle))
out <- sapply(julio13, function(x) subset(julio13, id_vehicle %in% julio13$id_vehicle))
View(out)
out <- apply(julio13, function(x) subset(julio13, id_vehicle %in% julio13$id_vehicle))
out <- apply(julio13, function(x) subset(julio13, x %in% julio13$id_vehicle))
for (i in julio13$VEHICLE) {
filter(julio13, VEHICLE== "i")
}
for (i in julio13$VEHICLE) {
output[i]<- filter(julio13, VEHICLE== "i")
}
for (i in julio13$VEHICLE) {
print(filter(julio13, VEHICLE== "i"))
}
for (i in julio13$VEHICLE) {
print(select(id_vehicle, CST6CDT, LATITUDE, LONGITUDE) %>% filter(julio13, VEHICLE== "i"))
}
for (i in julio13$VEHICLE) {
print(julio13 %>% select(id_vehicle, CST6CDT, LATITUDE, LONGITUDE) %>% filter(julio13, VEHICLE== "i"))
}
for (i in julio13$VEHICLE) {
print(julio13 %>% select(id_vehicle, CST6CDT, LATITUDE, LONGITUDE) %>% filter(VEHICLE== "i"))
}
for (i in julio13$VEHICLE) {
print(julio13 %>% select(id_vehicle, CST6CDT, LATITUDE, LONGITUDE) %>% filter(julio13, VEHICLE== "i"))
}
for (i in julio13$VEHICLE) {
print(julio13 %>% select(id_vehicle, CST6CDT, LATITUDE, LONGITUDE) %>% filter(i))
}
for (i in julio13$VEHICLE) {
print(julio13 %>% select(id_vehicle, CST6CDT, LATITUDE, LONGITUDE)
}
for (i in julio13$VEHICLE) {
print(julio13 %>% select(id_vehicle, CST6CDT, LATITUDE, LONGITUDE)
}
for (i in julio13$VEHICLE) {
print(julio13 %>% select(id_vehicle, CST6CDT, LATITUDE, LONGITUDE))
}
for (i in julio13$VEHICLE) {
print(julio13 %>% select(id_vehicle, CST6CDT, LATITUDE, LONGITUDE), filter(., id_vehicle=="i"))
}
for (i in julio13$VEHICLE) {
print(julio13 %>% select(id_vehicle, CST6CDT, LATITUDE, LONGITUDE) %>% filter(., id_vehicle=="i"))
}
for (i in julio13$VEHICLE) {
print(julio13 %>% select(id_vehicle, CST6CDT, LATITUDE, LONGITUDE) %>% filter(., i))
}
for (i in julio13$VEHICLE) {
filter(julio13, i)
}
for (i in julio13$VEHICLE) {
x <- i
}
for (i in julio13$VEHICLE) {
df_st_i <- julio13[!duplicated(julio13$id_vehicle),]
df_end_i <- julio13[rev(!duplicated(rev(julio13$id_vehicle))),]
st_ed_i<- dplyr::left_join(df_st_i, df_end_i, by="id_vehicle")
}
View(df_end_i)
for (i in julio13$id_vehicle) {
df_st[i] <- julio13[!duplicated(julio13$id_vehicle),]
}
for (i in julio13$id_vehicle) {
julio13[i] <- julio13[!duplicated(julio13$id_vehicle),]
}
for (i in julio13$id_vehicle) {
julio13[i] <- julio13[!duplicated(julio13$id_vehicle),]
}
for (i in julio13$id_vehicle) {
julio13i <- julio13[!duplicated(julio13$id_vehicle),]
}
View(st_ed_i)
for (i in julio13$id_vehicle) {
print(julio13[i, ])
}
for (i in julio13$id_vehicle) {
j<- (julio13[i, ])
}
View(j)
for (i in julio13$id_vehicle) {
julio13[i, ]
}
for (i in julio13$id_vehicle) {
print(i)
}
for (i in julio13$id_vehicle) {
select(i)
}
for (i in julio13$id_vehicle) {
newdata<- subset(julio13, id_vehicle==i)
}
for (i in julio13$id_vehicle) {
assign(i) %>% julio13 %>% select(id_vehicle, LONGITUDE, LATITUDE, CST6CDT)
}
for (i in julio13$id_vehicle) {
assign(i,data.frame(julio13$id_vehicle=="i"))
}
View(`2020-07-13-1`)
for (i in julio13$id_vehicle) {
assign(i,data.frame(julio13))
}
View(`2020-07-13-790`)
for (i in julio13$id_vehicle) {
assign(i,data.frame(julio13 %>% select(id_vehicle, LATITUDE, LONGITUDE, CST6CDT)))
}
View(`2020-07-13-486`)
View(`2020-07-13-486`)
for (i in julio13$id_vehicle) {
assign(i,data.frame(julio13 %>% select(id_vehicle, LATITUDE, LONGITUDE, CST6CDT) %>% filter(., id_vehicle=="i")))
}
for (i in seq_along(julio13)){
print(i)
}
for (i in seq_along(julio13)){
print(i)
}
for (i in seq_along(julio13$id_vehicle)){
print(i)
}
for (i in seq_along(julio13$id_vehicle)){
select(id_vehicle, LATITUDE, LONGITUDE, CST6CDT)
}
for (i in seq_along(julio13)){
select(id_vehicle, LATITUDE, LONGITUDE, CST6CDT)
}
for (i in julio13$id_vehicle) {
assign(i,data.frame(julio13 %>% select(id_vehicle, LATITUDE, LONGITUDE, CST6CDT) %>% filter(., id_vehicle=="i")))
}
for (i in julio13$id_vehicle) {
assign(i,data.frame(julio13 %>% select(id_vehicle, LATITUDE, LONGITUDE, CST6CDT) %>% filter(julio13, id_vehicle=="i")))
}
unique(julio13$id_vehicle)
for (i in julio13$id_vehicle) {
assign(i,data.frame(julio13 %>% select(id_vehicle, LATITUDE, LONGITUDE, CST6CDT) %>% filter(., id_vehicle==i)))
}
View(out)
View(`2020-07-13-169`)
View(`2020-07-13-10000`)
View(`2020-07-13-10000`)
for (i in julio13$id_vehicle) {
julio13 %>% select(id_vehicle, LATITUDE, LONGITUDE, CST6CDT) %>% filter(., id_vehicle==i))
}
for (i in julio13$id_vehicle) {
assign(i,list(julio13 %>% select(id_vehicle, LATITUDE, LONGITUDE, CST6CDT) %>% filter(., id_vehicle==i)))
}
View(`2020-07-13-1009`)
for (i in julio13$id_vehicle) {
julio13 %>% select(id_vehicle, LATITUDE, LONGITUDE, CST6CDT) %>% filter(., id_vehicle==i) %>% print(i)
}
for (i in julio13$id_vehicle) {
assign(i,data.frame(julio13 %>% select(id_vehicle, LATITUDE, LONGITUDE, CST6CDT) %>% filter(., id_vehicle==i)))
}
View(`2020-07-13-1`)
View(`2020-07-13-1135`)
for (i in julio13$id_vehicle) {
julio13 %>% select(id_vehicle, LATITUDE, LONGITUDE, CST6CDT) %>% filter(., id_vehicle==i)
print(i)
}
for (i in julio13$id_vehicle) {
julio13 %>% select(id_vehicle, LATITUDE, LONGITUDE, CST6CDT) %>% filter(., id_vehicle==i)
count(i)
}
for (i in julio13$id_vehicle) {
julio13 %>% select(id_vehicle, LATITUDE, LONGITUDE, CST6CDT) %>% filter(., id_vehicle==i)
nrow(i)
}
unicos_13 <- unique(julio13$id_vehicle)
nrow(unicos_13)
distinct(julio13$id_vehicle)
distinct(julio13)
distinct(julio13$Id)
ggmap01<- ggmap::LonLat2XY(julio13$LONGITUDE, julio13$LATITUDE)
ggmap01<- ggmap::LonLat2XY(julio13$LONGITUDE, julio13$LATITUDE, zoom = TRUE)
class(ggmap01)
class(gtfs_estatico)
julio_13_sf <- sf::as_Spatial(julio13)
View(`2020-07-13-1259`)
count(julio13$id_vehicle)
nrow(julio13$id_vehicle)
distinct(julio13$id_vehicle)
nrow(distinct(julio13, id_vehicle))
