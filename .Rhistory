#jul.jn.zapata.max$id <- paste0(jul.jn.zapata.max$nom, jul.jn.zapata.max$Group.1, jul.jn.zapata.max$Group.2)
#write.csv(jul.jn.zapata.max, "D:/Escritorio/gtfs.mes/jul/jul.zapata.max.csv")
jul.jn.zapata.summarize <- jul.jn.zapata %>% group_by(day, hour) %>%
summarise(
n = n(),
mean = mean(speed),
median = median(speed),
max = max(speed),
sd = sd(speed),
p75 = quantile(speed, 0.75)
)
jul.jn.zapata.summarize$nom <- "ZAPATA"
jul.jn.zapata.summarize$hour <- stringr::str_pad(jul.jn.zapata.summarize$hour, 2, side = "left", pad= "0")
jul.jn.zapata.summarize$id <- paste0(jul.jn.zapata.summarize$nom, jul.jn.zapata.summarize$day, jul.jn.zapata.summarize$hour)
#######################################################################################
st_buffer<-sf::st_buffer(tramo.sacmex, 30)
st_within<- sf::st_within(jul.jn, st_buffer, sparse = FALSE)
jul.jn.sacmex <- cbind(jul.jn, st_within)
jul.jn.sacmex <- jul.jn.sacmex %>% select(timestamp, vehicle, cst6cdt, speed, day, hour, st_within, geometry) %>% filter(st_within=="TRUE")
#write.csv(jul.jn.sacmex, "D:/Escritorio/gtfs.mes/jul/jul.sacmex.csv")
#jul.jn.sacmex.mean<- aggregate(jul.jn.sacmex$speed, list(jul.jn.sacmex$day, jul.jn.sacmex$hour), FUN=mean)
#write.csv(jul.jn.sacmex.mean, "D:/Escritorio/gtfs.mes/jul/jul.sacmex.mean.csv")
#jul.jn.sacmex.max<- aggregate(jul.jn.sacmex$speed, list(jul.jn.sacmex$day, jul.jn.sacmex$hour), FUN=max)
#jul.jn.sacmex.max$nom <- "SACMEX"
#jul.jn.sacmex.max$Group.2 <- stringr::str_pad(jul.jn.sacmex.max$Group.2, 2, side = "left", pad= "0")
#jul.jn.sacmex.max$id <- paste0(jul.jn.sacmex.max$nom, jul.jn.sacmex.max$Group.1, jul.jn.sacmex.max$Group.2)
#write.csv(jul.jn.sacmex.max, "D:/Escritorio/gtfs.mes/jul/jul.sacmex.max.csv")
jul.jn.sacmex.summarize <- jul.jn.sacmex %>% group_by(day, hour) %>%
summarise(
n = n(),
mean = mean(speed),
median = median(speed),
max = max(speed),
sd = sd(speed),
p75 = quantile(speed, 0.75)
)
jul.jn.sacmex.summarize$nom <- "SACMEX"
jul.jn.sacmex.summarize$hour <- stringr::str_pad(jul.jn.sacmex.summarize$hour, 2, side = "left", pad= "0")
jul.jn.sacmex.summarize$id <- paste0(jul.jn.sacmex.summarize$nom, jul.jn.sacmex.summarize$day, jul.jn.sacmex.summarize$hour)
###############################################################################
st_buffer<-sf::st_buffer(tramo.cchvallej, 30)
st_within<- sf::st_within(jul.jn, st_buffer, sparse = FALSE)
jul.jn.cchvallej <- cbind(jul.jn, st_within)
jul.jn.cchvallej <- jul.jn.cchvallej %>% select(timestamp, vehicle, cst6cdt, speed, day, hour, st_within, geometry) %>% filter(st_within=="TRUE")
#write.csv(jul.jn.cchvallej, "D:/Escritorio/gtfs.mes/jul/jul.cchvallej.csv")
#jul.jn.cchvallej.mean<- aggregate(jul.jn.cchvallej$speed, list(jul.jn.cchvallej$day, jul.jn.cchvallej$hour), FUN=mean)
#write.csv(jul.jn.cchvallej.mean, "D:/Escritorio/gtfs.mes/jul/jul.cchvallej.mean.csv")
#jul.jn.cchvallej.max<- aggregate(jul.jn.cchvallej$speed, list(jul.jn.cchvallej$day, jul.jn.cchvallej$hour), FUN=max)
#jul.jn.cchvallej.max$nom <- "CCHVAL"
#jul.jn.cchvallej.max$Group.2 <- stringr::str_pad(jul.jn.cchvallej.max$Group.2, 2, side = "left", pad= "0")
#jul.jn.cchvallej.max$id <- paste0(jul.jn.cchvallej.max$nom, jul.jn.cchvallej.max$Group.1, jul.jn.cchvallej.max$Group.2)
#write.csv(jul.jn.cchvallej.max, "D:/Escritorio/gtfs.mes/jul/jul.cchvallej.max.csv")
jul.jn.cchvallej.summarize <- jul.jn.cchvallej %>% group_by(day, hour) %>%
summarise(
n = n(),
mean = mean(speed),
median = median(speed),
max = max(speed),
sd = sd(speed),
p75 = quantile(speed, 0.75)
)
jul.jn.cchvallej.summarize$nom <- "CCHVAL"
jul.jn.cchvallej.summarize$hour <- stringr::str_pad(jul.jn.cchvallej.summarize$hour, 2, side = "left", pad= "0")
jul.jn.cchvallej.summarize$id <- paste0(jul.jn.cchvallej.summarize$nom, jul.jn.cchvallej.summarize$day, jul.jn.cchvallej.summarize$hour)
jul.jn.summarize.rbind<- rbind(jul.jn.picacho.summarize, jul.jn.dhumanos.summarize, jul.jn.zapata.summarize, jul.jn.sacmex.summarize, jul.jn.cchvallej.summarize)
jul.jn.summarize.rbind$geometry <- NULL
jul.jn.rbind <- jul.jn.summarize.rbind %>% select(id, nom, day, hour, n, mean, median, max, sd, p75)
#############################################################################################
jul.jn.rbind <- read.csv("D:/Escritorio/gtfs.mes/jul/jul.jn.rbind.csv")
jul.jn.rbind$year <- 2020
jul.jn.rbind$month <- 08
jul.jn.rbind$month <- stringr::str_pad(jul.jn.rbind$month, width = 2, side = "left", pad = "0")
jul.jn.rbind$day <- stringr::str_pad(jul.jn.rbind$day, width = 2, side = "left", pad = "0")
jul.jn.rbind$date <- paste(jul.jn.rbind$year,jul.jn.rbind$month, jul.jn.rbind$day, sep = "-")
jul.jn.rbind$date <- as.POSIXct(jul.jn.rbind$date)
head(jul.jn.rbind$date)
jul.jn.rbind$hour <- stringr::str_pad(jul.jn.rbind$hour, width = 2, side = "left", pad = "0")
jul.jn.rbind$hour <- stringr::str_pad(jul.jn.rbind$hour, width = 3, side = "right", pad = ":")
jul.jn.rbind$hour <- stringr::str_pad(jul.jn.rbind$hour, width = 4, side = "right", pad = "0")
jul.jn.rbind$hour <- stringr::str_pad(jul.jn.rbind$hour, width = 5, side = "right", pad = "0")
jul.jn.rbind$ts<- as.POSIXct(paste(jul.jn.rbind$date, jul.jn.rbind$hour), "CST6CDT")
write.csv(jul.jn.rbind, "D:/Escritorio/gtfs.mes/jul/jul.jn.rbind.csv")
jul.jn <- read.csv("D:/Escritorio/gtfs.metrobus/jul/jul.jn.csv")
View(jul.jn)
picacho <- jul.jn.rbind %>% select(id, nom, day, hour, n, mean, median, max, sd, p75, year, month, date, ts) %>% filter(nom=="PICACH")
## First make up some mock data
## Make a data frame with a full series of dates from the min date to the max date
## in the incomplete data frame
full_dates <- seq(min(picacho$ts), max(picacho$ts),
by = "1 hour")
full_dates <- data.frame(date = full_dates)
## Merge the complete data frame with the incomplete to fill in the dates and add
## NAs for missing values
my_complete_data <- merge(full_dates, picacho, by = "date",
all.x = TRUE)
my_complete_data_picacho <- my_complete_data
dhuman <- jul.jn.rbind %>% select(id, nom, day, hour, n, mean, median, max, sd, p75, year, month, date, ts) %>% filter(nom=="PICACH")
## First make up some mock data
## Make a data frame with a full series of dates from the min date to the max date
## in the incomplete data frame
full_dates <- seq(min(dhuman$ts), max(dhuman$ts),
by = "1 hour")
full_dates <- data.frame(date = full_dates)
## Merge the complete data frame with the incomplete to fill in the dates and add
## NAs for missing values
my_complete_data <- merge(full_dates, dhuman, by = "date",
all.x = TRUE)
my_complete_data_dhuman <- my_complete_data
zapata <- jul.jn.rbind %>% select(id, nom, day, hour, n, mean, median, max, sd, p75, year, month, date, ts) %>% filter(nom=="PICACH")
## First make up some mock data
## Make a data frame with a full series of dates from the min date to the max date
## in the incomplete data frame
full_dates <- seq(min(zapata$ts), max(zapata$ts),
by = "1 hour")
full_dates <- data.frame(date = full_dates)
## Merge the complete data frame with the incomplete to fill in the dates and add
## NAs for missing values
my_complete_data <- merge(full_dates, zapata, by = "date",
all.x = TRUE)
my_complete_data_zapata <- my_complete_data
#################################################
sacmex <- jul.jn.rbind %>% select(id, nom, day, hour, n, mean, median, max, sd, p75, year, month, date, ts) %>% filter(nom=="PICACH")
cchval <- jul.jn.rbind %>% select(id, nom, day, hour, n, mean, median, max, sd, p75, year, month, date, ts) %>% filter(nom=="PICACH")
sacmex <- jul.jn.rbind %>% select(id, nom, day, hour, n, mean, median, max, sd, p75, year, month, date, ts) %>% filter(nom=="PICACH")
## First make up some mock data
## Make a data frame with a full series of dates from the min date to the max date
## in the incomplete data frame
full_dates <- seq(min(sacmex$ts), max(sacmex$ts),
by = "1 hour")
full_dates <- data.frame(date = full_dates)
## Merge the complete data frame with the incomplete to fill in the dates and add
## NAs for missing values
my_complete_data <- merge(full_dates, sacmex, by = "date",
all.x = TRUE)
my_complete_data_sacmex <- my_complete_data
cchval <- jul.jn.rbind %>% select(id, nom, day, hour, n, mean, median, max, sd, p75, year, month, date, ts) %>% filter(nom=="PICACH")
## First make up some mock data
## Make a data frame with a full series of dates from the min date to the max date
## in the incomplete data frame
full_dates <- seq(min(cchval$ts), max(cchval$ts),
by = "1 hour")
full_dates <- data.frame(date = full_dates)
## Merge the complete data frame with the incomplete to fill in the dates and add
## NAs for missing values
my_complete_data <- merge(full_dates, cchval, by = "date",
all.x = TRUE)
my_complete_data_cchval <- my_complete_data
jul.jn.mcd <- rbind(my_complete_data_picacho,my_complete_data_dhuman, my_complete_data_dhuman, my_complete_data_sacmex, my_complete_data_cchval)
View(jul.jn.mcd)
write.csv(jul.jn.mcd, "D:/Escritorio/gtfs.mes/jul/jul.jn.mcd.csv" )
View(jul.jn.mcd)
weekdays(as.Date(jul.jn.mcd$date)
weekdays(as.Date(jul.jn.mcd$date))
jul.jn.mcd$dow<- weekdays(as.Date(jul.jn.mcd$date))
write.csv(jul.jn.mcd, "D:/Escritorio/gtfs.mes/jul/jul.jn.mcd.csv")
View(jul.jn.mcd)
View(my_complete_data_picacho)
View(my_complete_data_zapata)
picacho <- jul.jn.rbind %>% select(id, nom, day, hour, n, mean, median, max, sd, p75, year, month, date, ts) %>% filter(nom=="PICACH")
## First make up some mock data
## Make a data frame with a full series of dates from the min date to the max date
## in the incomplete data frame
full_dates <- seq(min(picacho$ts), max(picacho$ts),
by = "1 hour")
full_dates <- data.frame(date = full_dates)
## Merge the complete data frame with the incomplete to fill in the dates and add
## NAs for missing values
my_complete_data <- merge(full_dates, picacho, by = "date",
all.x = TRUE)
my_complete_data_picacho <- my_complete_data
#######################
dhuman <- jul.jn.rbind %>% select(id, nom, day, hour, n, mean, median, max, sd, p75, year, month, date, ts) %>% filter(nom=="DHUMAN")
## First make up some mock data
## Make a data frame with a full series of dates from the min date to the max date
## in the incomplete data frame
full_dates <- seq(min(dhuman$ts), max(dhuman$ts),
by = "1 hour")
full_dates <- data.frame(date = full_dates)
## Merge the complete data frame with the incomplete to fill in the dates and add
## NAs for missing values
my_complete_data <- merge(full_dates, dhuman, by = "date",
all.x = TRUE)
my_complete_data_dhuman <- my_complete_data
#####################################################
zapata <- jul.jn.rbind %>% select(id, nom, day, hour, n, mean, median, max, sd, p75, year, month, date, ts) %>% filter(nom=="ZAPATA")
## First make up some mock data
## Make a data frame with a full series of dates from the min date to the max date
## in the incomplete data frame
full_dates <- seq(min(zapata$ts), max(zapata$ts),
by = "1 hour")
full_dates <- data.frame(date = full_dates)
## Merge the complete data frame with the incomplete to fill in the dates and add
## NAs for missing values
my_complete_data <- merge(full_dates, zapata, by = "date",
all.x = TRUE)
my_complete_data_zapata <- my_complete_data
#################################################
sacmex <- jul.jn.rbind %>% select(id, nom, day, hour, n, mean, median, max, sd, p75, year, month, date, ts) %>% filter(nom=="SACMEX")
## First make up some mock data
## Make a data frame with a full series of dates from the min date to the max date
## in the incomplete data frame
full_dates <- seq(min(sacmex$ts), max(sacmex$ts),
by = "1 hour")
full_dates <- data.frame(date = full_dates)
## Merge the complete data frame with the incomplete to fill in the dates and add
## NAs for missing values
my_complete_data <- merge(full_dates, sacmex, by = "date",
all.x = TRUE)
my_complete_data_sacmex <- my_complete_data
####################################################################################
cchval <- jul.jn.rbind %>% select(id, nom, day, hour, n, mean, median, max, sd, p75, year, month, date, ts) %>% filter(nom=="CCHVAL")
## First make up some mock data
## Make a data frame with a full series of dates from the min date to the max date
## in the incomplete data frame
full_dates <- seq(min(cchval$ts), max(cchval$ts),
by = "1 hour")
full_dates <- data.frame(date = full_dates)
## Merge the complete data frame with the incomplete to fill in the dates and add
## NAs for missing values
my_complete_data <- merge(full_dates, cchval, by = "date",
all.x = TRUE)
my_complete_data_cchval <- my_complete_data
jul.jn.mcd <- rbind(my_complete_data_picacho,my_complete_data_dhuman, my_complete_data_dhuman, my_complete_data_sacmex, my_complete_data_cchval)
jul.jn.mcd$dow<- weekdays(as.Date(jul.jn.mcd$date))
View(jul.jn.mcd)
write.csv(jul.jn.mcd, "D:/Escritorio/gtfs.mes/jul/jul.jn.mcd.csv")
View(jul.jn.mcd)
jul.jn.rbind <- read.csv("D:/Escritorio/gtfs.mes/jul/jul.jn.rbind.csv")
jul.jn.rbind$year <- 2020
jul.jn.rbind$month <- 07
jul.jn.rbind$month <- stringr::str_pad(jul.jn.rbind$month, width = 2, side = "left", pad = "0")
jul.jn.rbind$day <- stringr::str_pad(jul.jn.rbind$day, width = 2, side = "left", pad = "0")
jul.jn.rbind$date <- paste(jul.jn.rbind$year,jul.jn.rbind$month, jul.jn.rbind$day, sep = "-")
jul.jn.rbind$date <- as.POSIXct(jul.jn.rbind$date)
head(jul.jn.rbind$date)
jul.jn.rbind$hour <- stringr::str_pad(jul.jn.rbind$hour, width = 2, side = "left", pad = "0")
jul.jn.rbind$hour <- stringr::str_pad(jul.jn.rbind$hour, width = 3, side = "right", pad = ":")
jul.jn.rbind$hour <- stringr::str_pad(jul.jn.rbind$hour, width = 4, side = "right", pad = "0")
jul.jn.rbind$hour <- stringr::str_pad(jul.jn.rbind$hour, width = 5, side = "right", pad = "0")
jul.jn.rbind$ts<- as.POSIXct(paste(jul.jn.rbind$date, jul.jn.rbind$hour), "CST6CDT")
write.csv(jul.jn.rbind, "D:/Escritorio/gtfs.mes/jul/jul.jn.rbind.csv")
####################################################################################################################3
picacho <- jul.jn.rbind %>% select(id, nom, day, hour, n, mean, median, max, sd, p75, year, month, date, ts) %>% filter(nom=="PICACH")
## First make up some mock data
## Make a data frame with a full series of dates from the min date to the max date
## in the incomplete data frame
full_dates <- seq(min(picacho$ts), max(picacho$ts),
by = "1 hour")
full_dates <- data.frame(date = full_dates)
## Merge the complete data frame with the incomplete to fill in the dates and add
## NAs for missing values
my_complete_data <- merge(full_dates, picacho, by = "date",
all.x = TRUE)
my_complete_data_picacho <- my_complete_data
#######################
dhuman <- jul.jn.rbind %>% select(id, nom, day, hour, n, mean, median, max, sd, p75, year, month, date, ts) %>% filter(nom=="DHUMAN")
## First make up some mock data
## Make a data frame with a full series of dates from the min date to the max date
## in the incomplete data frame
full_dates <- seq(min(dhuman$ts), max(dhuman$ts),
by = "1 hour")
full_dates <- data.frame(date = full_dates)
## Merge the complete data frame with the incomplete to fill in the dates and add
## NAs for missing values
my_complete_data <- merge(full_dates, dhuman, by = "date",
all.x = TRUE)
my_complete_data_dhuman <- my_complete_data
#####################################################
zapata <- jul.jn.rbind %>% select(id, nom, day, hour, n, mean, median, max, sd, p75, year, month, date, ts) %>% filter(nom=="ZAPATA")
## First make up some mock data
## Make a data frame with a full series of dates from the min date to the max date
## in the incomplete data frame
full_dates <- seq(min(zapata$ts), max(zapata$ts),
by = "1 hour")
full_dates <- data.frame(date = full_dates)
## Merge the complete data frame with the incomplete to fill in the dates and add
## NAs for missing values
my_complete_data <- merge(full_dates, zapata, by = "date",
all.x = TRUE)
my_complete_data_zapata <- my_complete_data
#################################################
sacmex <- jul.jn.rbind %>% select(id, nom, day, hour, n, mean, median, max, sd, p75, year, month, date, ts) %>% filter(nom=="SACMEX")
## First make up some mock data
## Make a data frame with a full series of dates from the min date to the max date
## in the incomplete data frame
full_dates <- seq(min(sacmex$ts), max(sacmex$ts),
by = "1 hour")
full_dates <- data.frame(date = full_dates)
## Merge the complete data frame with the incomplete to fill in the dates and add
## NAs for missing values
my_complete_data <- merge(full_dates, sacmex, by = "date",
all.x = TRUE)
my_complete_data_sacmex <- my_complete_data
####################################################################################
cchval <- jul.jn.rbind %>% select(id, nom, day, hour, n, mean, median, max, sd, p75, year, month, date, ts) %>% filter(nom=="CCHVAL")
## First make up some mock data
## Make a data frame with a full series of dates from the min date to the max date
## in the incomplete data frame
full_dates <- seq(min(cchval$ts), max(cchval$ts),
by = "1 hour")
full_dates <- data.frame(date = full_dates)
## Merge the complete data frame with the incomplete to fill in the dates and add
## NAs for missing values
my_complete_data <- merge(full_dates, cchval, by = "date",
all.x = TRUE)
my_complete_data_cchval <- my_complete_data
###############################################################3
jul.jn.mcd <- rbind(my_complete_data_picacho,my_complete_data_dhuman, my_complete_data_dhuman, my_complete_data_sacmex, my_complete_data_cchval)
jul.jn.mcd$dow<- weekdays(as.Date(jul.jn.mcd$date))
write.csv(jul.jn.mcd, "D:/Escritorio/gtfs.mes/jul/jul.jn.mcd.csv")
jul.gtfs.ohiiunam <- read.csv("D:/Escritorio/gtfs.mes/jul/jul.gtfs.ohiiunam.csv")
View(jul.gtfs.ohiiunam)
jul.gtfs.ohiiunam <- read.csv("D:/Escritorio/gtfs.mes/jul/jul.gtfs.ohiiunam.csv")
jul.gtfs.ohiiunam <- read.csv("D:/Escritorio/gtfs.mes/jul/jul.gtfs.ohiiunam.csv")
library(readxl)
jul_gtfs_ohiiunam <- read_excel("D:/Escritorio/gtfs.mes/jul/jul.gtfs.ohiiunam.xlsx")
View(jul_gtfs_ohiiunam)
jul_gtfs_ohiiunam$llueve <- ifelse(jul_gtfs_ohiiunam$prec.acum.mm>0,1,0)
View(jul_gtfs_ohiiunam)
table(jul_gtfs_ohiiunam$nom, jul_gtfs_ohiiunam$prec.acum.mm)
table(jul_gtfs_ohiiunam$nom, jul_gtfs_ohiiunam$llueve)
jul_gtfs_ohiiunam %>% group_by(nom, day) %>%
summarise(
n = n()
)
jul_gtfs_ohiiunam %>% group_by(nom, day) %>%
summarise(
sum = sum()
)
jul_gtfs_ohiiunam %>% group_by(nom, day) %>%
summarise(
sum = sum(llueve)
)
jul_gtfs_ohiiunam %>% group_by(nom, day) %>%
summarise(
sum = sum(llueve)
)
jul_gtfs_ohiiunam %>% group_by(nom, day) %>%
summarise(
sum = sum(llueve)
n = n(llueve)
)
jul_gtfs_ohiiunam %>% group_by(nom, day) %>%
summarise(
sum = sum(llueve)
)
llueve<- jul_gtfs_ohiiunam %>% group_by(nom, day) %>%
summarise(
sum = sum(llueve)
)
View(llueve)
ftable(llueve[, c("am", "gear")])
ftable(llueve[, c("am", "gear")])
ftable(llueve)
View(llueve)
jul_gtfs_ohiiunam %>% group_by(nom, day) %>%
summarise(
sum = sum(sum)
)
llueve %>% group_by(nom, day) %>%
summarise(
sum = sum(sum)
)
write.csv("D:/Escritorio/gtfs.mes/jul/llueve.csv")
write.csv(lluvia, "D:/Escritorio/gtfs.mes/jul/llueve.csv")
write.csv(lluve, "D:/Escritorio/gtfs.mes/jul/llueve.csv")
write.csv(llueve, "D:/Escritorio/gtfs.mes/jul/llueve.csv")
llueve<- jul_gtfs_ohiiunam %>% group_by(nom, hour) %>%
summarise(
sum = sum(llueve)
)
jul_gtfs_ohiiunam %>% group_by(nom, hour) %>%
summarise(
sum = sum(llueve)
)
View(jul_gtfs_ohiiunam)
llueve.hora<- jul_gtfs_ohiiunam %>% group_by(nom, hour) %>%
summarise(
sum = sum(llueve)
)
write.csv(llueve.hora, "D:/Escritorio/gtfs.mes/jul/llueve.hora.csv")
View(jul_gtfs_ohiiunam)
names(jul_gtfs_ohiiunam)
jul_gtfs_ohiiunam %>% select(mean, llueve) %>% filter(llueve==1)
mean(jul_gtfs_ohiiunam %>% select(mean, llueve) %>% filter(llueve==1), na.rm = TRUE)
mean(jul_gtfs_ohiiunam %>% select(mean, llueve) %>% filter(llueve==1))
mean(jul_gtfs_ohiiunam$mean[jul_gtfs_ohiiunam$llueve>0,"cigs"])
mean(jul_gtfs_ohiiunam$mean[jul_gtfs_ohiiunam$llueve>0,"llueve"])
mean(jul_gtfs_ohiiunam[jul_gtfs_ohiiunam$llueve>0,"llueve"])
jul_gtfs_ohiiunam %>%
group_by(llueve) %>%
summarise(mean = mean(mean, na.rm = TRUE))
jul_gtfs_ohiiunam %>%
group_by(llueve) %>%
summarise(mean = mean(max, na.rm = TRUE))
jul_gtfs_ohiiunam %>%
group_by(llueve) %>%
summarise(mean = mean(mean, na.rm = TRUE))
jul_gtfs_ohiiunam %>%
group_by(llueve) %>%
summarise(mean = mean(mean, na.rm = FALSE))
jul_gtfs_ohiiunam %>%
group_by(llueve) %>%
summarise(mean = mean(mean, na.rm = TRUE))
jul_gtfs_ohiiunam %>%
group_by(llueve) %>%
summarise(mean = mean(max, na.rm = TRUE))
jul_gtfs_ohiiunam %>%
group_by(llueve) %>%
summarise(mean = mean(median, na.rm = TRUE))
jul_gtfs_ohiiunam %>%
group_by(llueve) %>%
summarise(mean = mean(max, na.rm = TRUE))
compas <- c("Ana", "Rodolfo")
for (i in compas) {
print()
}
for (i in compas) {
print(i)
}
for (i in compas) {
print(paste(Hola, "i") )
}
for (i in compas) {
print(paste("Hola", "i") )
}
for (i in compas) {
print(paste("Hola", i) )
}
metadata
select(metadata, sample, clade, cit, genome_size)
download.file("https://raw.githubusercontent.com/datacarpentry/R-genomics/gh-pages/data/Ecoli_metadata.csv", "data/Ecoli_metadata.csv")
download.file("https://raw.githubusercontent.com/datacarpentry/R-genomics/gh-pages/data/Ecoli_metadata.csv", "data/Ecoli_metadata.csv")
mpg
library(ggplot2)
mpg
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point()
ggplot(mpg, aes(displ, hwy)) +
geom_point()
ggplot(mpg, aes(cty, hwy)) +
geom_point()
jul_gtfs_ohiiunam$llueve1SD <- ifelse(jul_gtfs_ohiiunam$prec.acum.mm>0.0804,1,0)
jul_gtfs_ohiiunam$llueve2SD <- ifelse(jul_gtfs_ohiiunam$prec.acum.mm>0.0808,1,0)
jul_gtfs_ohiiunam$llueve3SD <- ifelse(jul_gtfs_ohiiunam$prec.acum.mm>0.0812,1,0)
jul_gtfs_ohiiunam %>%
group_by(llueve1SD) %>%
summarise(mean = mean(mean, na.rm = TRUE))
jul_gtfs_ohiiunam %>%
group_by(llueve2SD) %>%
summarise(mean = mean(mean, na.rm = TRUE))
jul_gtfs_ohiiunam %>%
group_by(llueve3SD) %>%
summarise(mean = mean(mean, na.rm = TRUE))
name <- "Carmen"; n1 <- 10; n2 <- 100; m <- 0.5
ls(name)
ls()
jul_gtfs_ohiiunam %>%
group_by(llueve) %>%
summarise(mean = mean(max, na.rm = TRUE))
name <- "Carmen"; n1 <- 10; n2 <- 100; m <- 0.5
ls()
ls(pat="m")
ls(pat="n")
ls(pat = "ˆm")
ls(pat = "ˆm")
ls(pat = "^m")
ls.str()
M <- data.frame(n1, n2, m)
ls.str(pat="M")
M
ls.str(pat="M", max.level=-1)
ls.str(pat="M", max.level=1)
ls.str(pat="M", max.level)
ls.str(pat="M", max.level="1")
rm(list=ls(pat="^m"))
?lm
?stats
help("*")
20%%2
20%%5
2%%5
3%%5
help("!=")
288%%5
288%%2
288%%1
288%%3
288%%4
288%%5
5%%1
6%%1
5%/%1
5%/%1
5%/%2
15%/%2
help.start()
apropos(help)
apropos()
apropos("help")
apropos("graph")
apropos("lm")
11%%3
101%%3
101%%4
101%%5
5%%1
5%%3
5%%5
288%%5
4%%75
4=4
