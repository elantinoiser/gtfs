Y3s <- c(8,5)
Coord3 <- cbind(X3s,Y3s)
# Crea objeto de Clase Linestring
L3 <- st_linestring(Coord3)
L3 <- sf::st_linestring(Coord3)
L1L2 <- st_multilinestring(list(L1,L2))
L1L2 <- sf::st_multilinestring(list(L1,L2))
L1L2 <- sf::st_multilinestring(list(L1,geometria2 <- st_sfc(L1,L2,L3)
L2))
L1L2 <- sf::st_multilinestring(list(L1,L2))
geometria2 <- st_sfc(L1,L2,L3)
geometria2 <- sf::st_sfc(L1,L2,L3)
plot(geometria2)
plot(st_buffer)
View(l1.mbus.est)
table(l1.mbus.est$nombre, l1.mbus.est$hour)
lineas.metrobus <- sf::st_read("D:/Escritorio/lineas.metrobus/lineas-metrobus.shp")
lineas.metrobus = lineas.metrobus %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
jul.jn <- read.csv("D:/Escritorio/gtfs.metrobus/jul/jul.jn.csv")
names(jul.jn)
jul.jn <-  jul.jn %>% select(Id, TIMESTAMP, SPEED, LECTURA, geometry)
names(jul.jn) <- c("timestamp", "vehicle", "speed", "x", "y")
jul.jn$vehicle <- substr(jul.jn$vehicle, 4, 100000)
jul.jn$vehicle <- as.factor(jul.jn$vehicle)
jul.jn$x <- chartr("c(", "  ", jul.jn$x)
jul.jn$x <- as.numeric(jul.jn$x)
jul.jn$y <- chartr(")", " ", jul.jn$y)
jul.jn$y <- as.numeric(jul.jn$y)
jul.jn$cst6cdt<- lubridate::as_datetime(jul.jn$timestamp, tz="CST6CDT")
jul.jn$day <- lubridate::day(jul.jn$cst6cdt)
jul.jn$hour <- lubridate::hour(jul.jn$cst6cdt)
jul.jn <- jul.jn %>% select(timestamp, vehicle, x, y, cst6cdt, day, hour) %>% filter(y!="0")
jul.jn <- jul.jn %>% select(timestamp, vehicle, x, y, cst6cdt, day, hour) %>% filter(x!="0")
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(day=="15")
names(jul.jn)
View(jul.jn)
jul.jn <- read.csv("D:/Escritorio/gtfs.metrobus/jul/jul.jn.csv")
names(jul.jn)
jul.jn <-  jul.jn %>% select(Id, TIMESTAMP, SPEED, LECTURA, geometry)
head(jul.jn)
tail(jul.jn)
jul.jn$SPEED
summarise(jul.jn$SPEED)
summary(jul.jn$SPEED)
jul.jn <- read.csv("D:/Escritorio/gtfs.metrobus/jul/jul.jn.csv")
head(jul.jn)
jul.jn <-  jul.jn %>% select(Id, TIMESTAMP, ODOMETER, LECTURA, geometry)
names(jul.jn) <- c("timestamp", "vehicle", "speed", "x", "y")
jul.jn$vehicle <- substr(jul.jn$vehicle, 4, 100000)
jul.jn$vehicle <- as.factor(jul.jn$vehicle)
jul.jn$x <- chartr("c(", "  ", jul.jn$x)
jul.jn$x <- as.numeric(jul.jn$x)
jul.jn$y <- chartr(")", " ", jul.jn$y)
jul.jn$y <- as.numeric(jul.jn$y)
jul.jn$cst6cdt<- lubridate::as_datetime(jul.jn$timestamp, tz="CST6CDT")
jul.jn$day <- lubridate::day(jul.jn$cst6cdt)
jul.jn$hour <- lubridate::hour(jul.jn$cst6cdt)
jul.jn <- jul.jn %>% select(timestamp, vehicle, x, y, cst6cdt, day, hour) %>% filter(y!="0")
jul.jn <- jul.jn %>% select(timestamp, vehicle, x, y, cst6cdt, day, hour) %>% filter(x!="0")
jul.jn <- read.csv("D:/Escritorio/gtfs.metrobus/jul/jul.jn.csv")
jul.jn2 <- jul.jn
jul.jn <-  jul.jn %>% select(Id, TIMESTAMP, ODOMETER, LECTURA, geometry)
names(jul.jn) <- c("timestamp", "vehicle", "speed", "x", "y")
jul.jn$vehicle <- substr(jul.jn$vehicle, 4, 100000)
jul.jn$vehicle <- as.factor(jul.jn$vehicle)
jul.jn$x <- chartr("c(", "  ", jul.jn$x)
jul.jn$x <- as.numeric(jul.jn$x)
jul.jn$y <- chartr(")", " ", jul.jn$y)
jul.jn$y <- as.numeric(jul.jn$y)
jul.jn$cst6cdt<- lubridate::as_datetime(jul.jn$timestamp, tz="CST6CDT")
jul.jn$day <- lubridate::day(jul.jn$cst6cdt)
jul.jn$hour <- lubridate::hour(jul.jn$cst6cdt)
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(y!="0")
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(x!="0")
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(day=="15")
mean(jul.jn$speed)
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(speed!="0")
mean(jul.jn$speed)
range(jul.jn$speed)
summary(jul.jn$speed)
jul.jn <- sf::st_as_sf(jul.jn, coords = c("x", "y"), crs = 4326, agr = "constant") #Convertir la base jul.jn en una con campo geométrico.
jul.jn <- jul.jn %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
linea1.1<- sf::st_wrap_dateline(sf::st_sfc(sf::st_linestring(rbind(c(-99.1691, 19.2793),c(-99.1700, 19.2803), c(-99.1755, 19.2837), c(-99.1744, 19.2883), c(-99.1773, 19.2925), c(-99.1812, 19.2941), c(-99.1855, 19.2994), c(-99.1860, 19.3044), c(-99.1874, 19.3146), c(-99.1884, 19.3227), c(-99.1899, 19.3408))), crs = 4326))
linea1.1 = linea1.1 %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
st_buffer<-sf::st_buffer(linea1.1, 100)
st_within<- sf::st_within(jul.jn, st_buffer, sparse = FALSE)
jul.jn <- cbind(jul.jn, st_within)
jul.jn<- jul.jn %>% select(timestamp, vehicle, cst6cdt, day, hour, st_within, geometry) %>% filter(st_within=="TRUE")
l1.mbus.est <- sf::st_read("D:/Escritorio/gtfs_estatico/l1.mbus.est03.shp")
l1.mbus.est = l1.mbus.est %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
l1.mbus.est <- sf::st_join(jul.jn, l1.mbus.est, join=sf::st_nearest_feature, left= T)
jul.jn
jul.jn <- jul.jn2
#Seleccionar solamente las columnas que me sirven
jul.jn <-  jul.jn %>% select(Id, TIMESTAMP, ODOMETER, LECTURA, geometry)
#Cambiar nombres de las variables
names(jul.jn) <- c("timestamp", "vehicle", "speed", "x", "y")
#Formato a las variables. Comencemos por vehicle, ya que la de timestamp se queda igual. Revisar que las variables hayan quedado como quiero.
jul.jn$vehicle <- substr(jul.jn$vehicle, 4, 100000)
jul.jn$vehicle <- as.factor(jul.jn$vehicle)
jul.jn$x <- chartr("c(", "  ", jul.jn$x)
jul.jn$x <- as.numeric(jul.jn$x)
jul.jn$y <- chartr(")", " ", jul.jn$y)
jul.jn$y <- as.numeric(jul.jn$y)
jul.jn$cst6cdt<- lubridate::as_datetime(jul.jn$timestamp, tz="CST6CDT")
jul.jn$day <- lubridate::day(jul.jn$cst6cdt)
jul.jn$hour <- lubridate::hour(jul.jn$cst6cdt)
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(y!="0")
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(x!="0")
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(speed!="0")
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(day=="15")
#Union de la base jul.jn con las líneas de Metrobus. Desde aquí vamos preparando el código para quedarnos con la línea 1.
jul.jn <- sf::st_as_sf(jul.jn, coords = c("x", "y"), crs = 4326, agr = "constant") #Convertir la base jul.jn en una con campo geométrico.
jul.jn <- jul.jn %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
#
est.l1 <- sf::st_join(jul.jn, lineas.metrobus, join = sf::st_nearest_feature, left = T)
est.l1$l.mbus <- substr(est.l1$name, 1, 4)
est.l1<- est.l1 %>% select(timestamp, vehicle, speed, cst6cdt, name, nombre, geometry, l.mbus) %>% filter(l.mbus=="MB01")
#Objeto de clase sf
linea1.1 <- sf::st_read("D:/Escritorio/gtfs_estatico/linea1.1.shp")
linea1.1<- sf::st_wrap_dateline(sf::st_sfc(sf::st_linestring(rbind(c(-99.1691, 19.2793),c(-99.1700, 19.2803), c(-99.1755, 19.2837), c(-99.1744, 19.2883), c(-99.1773, 19.2925), c(-99.1812, 19.2941), c(-99.1855, 19.2994), c(-99.1860, 19.3044), c(-99.1874, 19.3146), c(-99.1884, 19.3227), c(-99.1899, 19.3408))), crs = 4326))
linea1.1 = linea1.1 %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
st_buffer<-sf::st_buffer(linea1.1, 100)
st_within<- sf::st_within(jul.jn, st_buffer, sparse = FALSE)
jul.jn <- cbind(jul.jn, st_within)
jul.jn<- jul.jn %>% select(timestamp, vehicle, cst6cdt, speed, day, hour, st_within, geometry) %>% filter(st_within=="TRUE")
l1.mbus.est <- sf::st_read("D:/Escritorio/gtfs_estatico/l1.mbus.est03.shp")
l1.mbus.est = l1.mbus.est %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
#Unir
l1.mbus.est <- sf::st_join(jul.jn, l1.mbus.est, join=sf::st_nearest_feature, left= T)
jul.jn
mean(jul.jn$speed)
summary(jul.jn$speed)
boxplot(jul.jn$speed)
table(jul.jn$hour, jul.jn$speed)
plot(jul.jn$speed)
plot(jul.jn$hour, jul.jn$speed)
hist(jul.jn$speed)
hist(jul.jn$speed, breaks = "Sturges")
hist(jul.jn$speed, col = "steelblue", frame = FALSE))
hist(jul.jn$speed, col = "steelblue", frame = FALSE)
summary(jul.jn$speed)
summary(jul.jn$speed)
linea1.2 <- sf::st_wrap_dateline(sf::st_sfc(sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512)))))
plot(linea1.2)
linea1.2 <- sf::st_wrap_dateline(sf::st_sfc(sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512), c(-99.1852, 19.3547), c(-99.1840, 19.3583)))))
plot(linea1.2)
linea1.2 <- sf::st_wrap_dateline(sf::st_sfc(sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512), c(-99.1852, 19.3547), c(-99.1840, 19.3583), c(-99.1827, 19.3619)))))
linea1.2 <- sf::st_wrap_dateline(sf::st_sfc(sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512), c(-99.1852, 19.3547), c(-99.1840, 19.3583), c(-99.1827, 19.3619), c(-99.1817, 19.3650), c(-99.1804, 19.3690), c(-99.1787, 19.3742), c(-99.1772, 19.3793), c(-99.1760, 19.3826)))))
plot(linea1.2)
linea1.2 <- sf::st_wrap_dateline(sf::st_sfc(sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512), c(-99.1852, 19.3547), c(-99.1840, 19.3583), c(-99.1827, 19.3619), c(-99.1817, 19.3650), c(-99.1804, 19.3690), c(-99.1787, 19.3742), c(-99.1772, 19.3793), c(-99.1760, 19.3826), c(-99.1752, 19.3855), crs = 4326))))
plot(linea1.2)
linea1.1.2 <- st_multilinestring(list(llinea1.1,linea1.2))
linea1.1.2 <- sf::st_multilinestring(list(llinea1.1,linea1.2))
linea1.1.2 <- sf::st_multilinestring(list(linea1.1,linea1.2))
linea1.1.2 <- sf::st_multilinestring(list(linea1.1,linea1.2))
linea1.1.2 <- sf::st_multilinestring(linea1.1,linea1.2)
plot(linea1.1.2)
plot(linea1.1)
plot(linea1.1.2)
linea1.1.2
plot(linea1.1)
plot(linea1.2)
plot(linea1.1.2)
linea1.1.2 <- sf::st_multilinestring(linea1.1,linea1.2)
linea1.1.2
linea1.2
linea1.2 = linea1.2 %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
linea1.2 <- sf::st_wrap_dateline(sf::st_sfc(sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512), c(-99.1852, 19.3547), c(-99.1840, 19.3583), c(-99.1827, 19.3619), c(-99.1817, 19.3650), c(-99.1804, 19.3690), c(-99.1787, 19.3742), c(-99.1772, 19.3793), c(-99.1760, 19.3826), c(-99.1752, 19.3855), crs = 4326))))
linea1.2 = linea1.2 %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
linea1.2 <-sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512), c(-99.1852, 19.3547), c(-99.1840, 19.3583), c(-99.1827, 19.3619), c(-99.1817, 19.3650), c(-99.1804, 19.3690), c(-99.1787, 19.3742), c(-99.1772, 19.3793), c(-99.1760, 19.3826), c(-99.1752, 19.3855), crs = 4326)
linea1.2 <-sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512), c(-99.1852, 19.3547), c(-99.1840, 19.3583), c(-99.1827, 19.3619), c(-99.1817, 19.3650), c(-99.1804, 19.3690), c(-99.1787, 19.3742), c(-99.1772, 19.3793), c(-99.1760, 19.3826), c(-99.1752, 19.3855), crs = 4326))
linea1.2 <-sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512), c(-99.1852, 19.3547), c(-99.1840, 19.3583), c(-99.1827, 19.3619), c(-99.1817, 19.3650), c(-99.1804, 19.3690), c(-99.1787, 19.3742), c(-99.1772, 19.3793), c(-99.1760, 19.3826), c(-99.1752, 19.3855), crs = 4326))
linea1.2 = linea1.2 %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
linea1.2 <-sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512), c(-99.1852, 19.3547), c(-99.1840, 19.3583), c(-99.1827, 19.3619), c(-99.1817, 19.3650), c(-99.1804, 19.3690), c(-99.1787, 19.3742), c(-99.1772, 19.3793), c(-99.1760, 19.3826), c(-99.1752, 19.3855), crs = 4326))
plot(linea1.2)
linea1.2 = linea1.2 %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
linea1.2 <- sf::st_wrap_dateline(sf::st_sfc(sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512), c(-99.1852, 19.3547), c(-99.1840, 19.3583), c(-99.1827, 19.3619), c(-99.1817, 19.3650), c(-99.1804, 19.3690), c(-99.1787, 19.3742), c(-99.1772, 19.3793), c(-99.1760, 19.3826), c(-99.1752, 19.3855), crs = 4326))))
linea1.2 = linea1.2 %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
linea1.2
linea1.2 <- sf::st_wrap_dateline(sf::st_sfc(sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512), c(-99.1852, 19.3547), c(-99.1840, 19.3583), c(-99.1827, 19.3619), c(-99.1817, 19.3650), c(-99.1804, 19.3690), c(-99.1787, 19.3742), c(-99.1772, 19.3793), c(-99.1760, 19.3826), c(-99.1752, 19.3855), crs = 4326)))
linea1.2<- sf::st_wrap_dateline(sf::st_sfc(sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512), c(-99.1852, 19.3547), c(-99.1840, 19.3583), c(-99.1827, 19.3619), c(-99.1817, 19.3650), c(-99.1804, 19.3690), c(-99.1787, 19.3742), c(-99.1772, 19.3793), c(-99.1760, 19.3826), c(-99.1752, 19.3855))), crs = 4326))
linea1.2<- sf::st_wrap_dateline(sf::st_sfc(sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512), c(-99.1852, 19.3547), c(-99.1840, 19.3583), c(-99.1827, 19.3619), c(-99.1817, 19.3650), c(-99.1804, 19.3690), c(-99.1787, 19.3742), c(-99.1772, 19.3793), c(-99.1760, 19.3826), c(-99.1752, 19.3855))), crs = 4326))
linea1.2 = linea1.2 %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
plot(linea1.2)
linea1.1.2 <- sf::st_multilinestring(linea1.1,linea1.2)
plot(linea1.1.2)
linea1.1.2 <- sf::st_multilinestring(list(linea1.1,linea1.2))
linea1.1.2 <- sf::st_multilinestring(list(linea1.1,linea1.2))
linea1.2 = linea1.2 %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
plot(linea1.2)
linea1.2<- sf::st_wrap_dateline(sf::st_sfc(sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512), c(-99.1852, 19.3547), c(-99.1840, 19.3583), c(-99.1827, 19.3619), c(-99.1817, 19.3650), c(-99.1804, 19.3690), c(-99.1787, 19.3742), c(-99.1772, 19.3793), c(-99.1760, 19.3826), c(-99.1752, 19.3855))), crs = 4326))
linea1.2 = linea1.2 %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
plot(linea1.2)
sf::st_multilinestring(list(linea1.1, linea1.2))
linea1.1
linea1.2
sf::st_sfc(linea1.1, linea1.2)
linea1.1<- sf::st_wrap_dateline(sf::st_sfc(sf::st_linestring(rbind(c(-99.1691, 19.2793),c(-99.1700, 19.2803), c(-99.1755, 19.2837), c(-99.1744, 19.2883), c(-99.1773, 19.2925), c(-99.1812, 19.2941), c(-99.1855, 19.2994), c(-99.1860, 19.3044), c(-99.1874, 19.3146), c(-99.1884, 19.3227), c(-99.1899, 19.3408))), crs = 4326))
linea1.2<- sf::st_wrap_dateline(sf::st_sfc(sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512), c(-99.1852, 19.3547), c(-99.1840, 19.3583), c(-99.1827, 19.3619), c(-99.1817, 19.3650), c(-99.1804, 19.3690), c(-99.1787, 19.3742), c(-99.1772, 19.3793), c(-99.1760, 19.3826), c(-99.1752, 19.3855))), crs = 4326))
sf::st_multilinestring(linea1.1, linea1.2)
sf::st_multilinestring(list(linea1.1, linea1.2))
linea1.1.2 <- sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512), c(-99.1852, 19.3547), c(-99.1840, 19.3583), c(-99.1827, 19.3619), c(-99.1817, 19.3650), c(-99.1804, 19.3690), c(-99.1787, 19.3742), c(-99.1772, 19.3793), c(-99.1760, 19.3826), c(-99.1752, 19.3855))), crs = 4326)
linea1.2 <- sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512), c(-99.1852, 19.3547), c(-99.1840, 19.3583), c(-99.1827, 19.3619), c(-99.1817, 19.3650), c(-99.1804, 19.3690), c(-99.1787, 19.3742), c(-99.1772, 19.3793), c(-99.1760, 19.3826), c(-99.1752, 19.3855)))
linea1.1 <- sf::st_linestring(rbind(c(-99.1691, 19.2793),c(-99.1700, 19.2803), c(-99.1755, 19.2837), c(-99.1744, 19.2883), c(-99.1773, 19.2925), c(-99.1812, 19.2941), c(-99.1855, 19.2994), c(-99.1860, 19.3044), c(-99.1874, 19.3146), c(-99.1884, 19.3227), c(-99.1899, 19.3408)))
sf::st_sfc(linea1.1, linea1.2)
linea1.1.2<- sf::st_sfc(linea1.1, linea1.2)
plot(linea1.1.2)
sf::st_sfc(linea1.1.2<- sf::st_sfc(linea1.1, linea1.2)
linea1.1.2<- sf::st_sfc(linea1.1, linea1.2)
dfafa
linea1.1.2 = linea1.1.2 %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
linea1.1.2
jul.jn <- read.csv("C:/Users/rdelatorre/Desktop/gtfs.metrobus/jul/jul.jn.csv")
jul.jn <- read.csv("D:/Escritorio/gtfs.metrobus/jul/jul.jn.csv")
jul.jn2 <- jul.jn
#Formato a las variables. Comencemos por vehicle, ya que la de timestamp se queda igual. Revisar que las variables hayan quedado como quiero.
jul.jn$vehicle <- substr(jul.jn$vehicle, 4, 100000)
jul.jn$vehicle <- as.factor(jul.jn$vehicle)
jul.jn$x <- chartr("c(", "  ", jul.jn$x)
jul.jn$x <- as.numeric(jul.jn$x)
jul.jn$y <- chartr(")", " ", jul.jn$y)
jul.jn$y <- as.numeric(jul.jn$y)
jul.jn$cst6cdt<- lubridate::as_datetime(jul.jn$timestamp, tz="CST6CDT")
jul.jn$day <- lubridate::day(jul.jn$cst6cdt)
jul.jn$hour <- lubridate::hour(jul.jn$cst6cdt)
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(y!="0")
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(x!="0")
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(speed!="0")
library(dplyr)
#Formato a las variables. Comencemos por vehicle, ya que la de timestamp se queda igual. Revisar que las variables hayan quedado como quiero.
jul.jn$vehicle <- substr(jul.jn$vehicle, 4, 100000)
jul.jn$vehicle <- as.factor(jul.jn$vehicle)
jul.jn$x <- chartr("c(", "  ", jul.jn$x)
jul.jn$x <- as.numeric(jul.jn$x)
jul.jn$y <- chartr(")", " ", jul.jn$y)
jul.jn$y <- as.numeric(jul.jn$y)
jul.jn$cst6cdt<- lubridate::as_datetime(jul.jn$timestamp, tz="CST6CDT")
jul.jn$day <- lubridate::day(jul.jn$cst6cdt)
jul.jn$hour <- lubridate::hour(jul.jn$cst6cdt)
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(y!="0")
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(x!="0")
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(speed!="0")
jul.jn$vehicle <- substr(jul.jn$vehicle, 4, 100000)
jul.jn$vehicle <- as.factor(jul.jn$vehicle)
jul.jn$x <- chartr("c(", "  ", jul.jn$x)
jul.jn$x <- as.numeric(jul.jn$x)
jul.jn$y <- chartr(")", " ", jul.jn$y)
jul.jn$y <- as.numeric(jul.jn$y)
jul.jn$cst6cdt<- lubridate::as_datetime(jul.jn$timestamp, tz="CST6CDT")
jul.jn$day <- lubridate::day(jul.jn$cst6cdt)
jul.jn$hour <- lubridate::hour(jul.jn$cst6cdt)
jul.jn$vehicle <- substr(jul.jn$vehicle, 4, 100000)
names(jul.jn) <- c("timestamp", "vehicle", "speed", "x", "y")
jul.jn$vehicle <- substr(jul.jn$vehicle, 4, 100000)
jul.jn$vehicle <- as.factor(jul.jn$vehicle)
jul.jn$x <- chartr("c(", "  ", jul.jn$x)
jul.jn$x <- as.numeric(jul.jn$x)
jul.jn$y <- chartr(")", " ", jul.jn$y)
jul.jn$y <- as.numeric(jul.jn$y)
jul.jn$cst6cdt<- lubridate::as_datetime(jul.jn$timestamp, tz="CST6CDT")
jul.jn$day <- lubridate::day(jul.jn$cst6cdt)
jul.jn$hour <- lubridate::hour(jul.jn$cst6cdt)
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(y!="0")
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(x!="0")
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(speed!="0")
mean(jul.jn$speed)
mean(jul.jn$speed, na.rm=TRUE)
jul.jn
jul.jn <- jul.jn2
#Seleccionar solamente las columnas que me sirven
jul.jn <-  jul.jn %>% select(Id, TIMESTAMP, ODOMETER, LECTURA, geometry)
#Cambiar nombres de las variables
names(jul.jn) <- c("timestamp", "vehicle", "speed", "x", "y")
#Formato a las variables. Comencemos por vehicle, ya que la de timestamp se queda igual. Revisar que las variables hayan quedado como quiero.
jul.jn$vehicle <- substr(jul.jn$vehicle, 4, 100000)
jul.jn$vehicle <- as.factor(jul.jn$vehicle)
jul.jn$x <- chartr("c(", "  ", jul.jn$x)
jul.jn$x <- as.numeric(jul.jn$x)
jul.jn$y <- chartr(")", " ", jul.jn$y)
jul.jn$y <- as.numeric(jul.jn$y)
jul.jn$cst6cdt<- lubridate::as_datetime(jul.jn$timestamp, tz="CST6CDT")
jul.jn$day <- lubridate::day(jul.jn$cst6cdt)
jul.jn$hour <- lubridate::hour(jul.jn$cst6cdt)
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(y!="0")
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(x!="0")
jul.jn <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(speed!="0")
mean(jul.jn$speed)
r
ver
version
mean(jul.jn[jul.jn$speed=0,"cigs"])
mean(jul.jn[jul.jn$speed==0,"cigs"])
mean(jul.jn[jul.jn$speed==0,"speed"])
mean(jul.jn[jul.jn$speed==0,"speed"], na.rm = TRUE)
mean(jul.jn[jul.jn$speed==0,"speed", na.rm = TRUE])
mean(jul.jn$speed[hour==1])
names(jul.jn)
mean(jul.jn$speed[hour==6])
class(jul.jn$hour)
jul.jn$hour <- as.factor(jul.jn$hour)
mean(jul.jn[jul.jn$speed==0,"speed", na.rm = TRUE])
mean(jul.jn$speed[hour==6])
aggregate(jul.jn$speed, list(jul.jn$hour), FUN=mean)
jul.jn.15 <- jul.jn %>% select(timestamp, vehicle, speed, x, y, cst6cdt, day, hour) %>% filter(day=="15")
aggregate(jul.jn.15$speed, list(jul.jn$hour), FUN=mean)
aggregate(jul.jn.15$speed, list(jul.jn.15$hour), FUN=mean)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=mean)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=max)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=st)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=dst)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=median)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=ST)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=SD)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=max)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN = function(x) quantile(x, probs = 0.95))
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN = function(x) quantile(x, probs = 0.90))
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN = function(x) quantile(x, probs = 0.99))
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN = function(x) quantile(x, probs = 0.75))
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN = function(x) quantile(x, probs = 0.95))
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=max)
lineas.metrobus <- sf::st_read("D:/Escritorio/lineas.metrobus/lineas-metrobus.shp")
lineas.metrobus = lineas.metrobus %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
jul.jn <- sf::st_as_sf(jul.jn, coords = c("x", "y"), crs = 4326, agr = "constant") #Convertir la base jul.jn en una con campo geométrico.
jul.jn <- jul.jn %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
linea1.1<- sf::st_wrap_dateline(sf::st_sfc(sf::st_linestring(rbind(c(-99.1691, 19.2793),c(-99.1700, 19.2803), c(-99.1755, 19.2837), c(-99.1744, 19.2883), c(-99.1773, 19.2925), c(-99.1812, 19.2941), c(-99.1855, 19.2994), c(-99.1860, 19.3044), c(-99.1874, 19.3146), c(-99.1884, 19.3227), c(-99.1899, 19.3408))), crs = 4326))
linea1.1 = linea1.1 %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
st_buffer<-sf::st_buffer(linea1.1, 100)
st_within<- sf::st_within(jul.jn, st_buffer, sparse = FALSE)
jul.jn <- cbind(jul.jn, st_within)
jul.jn<- jul.jn %>% select(timestamp, vehicle, cst6cdt, speed, day, hour, st_within, geometry) %>% filter(st_within=="TRUE")
plot(jul.jn)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=max)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=max)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=max)
sd(jul.jn$speed)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN = function(x) sd(x))
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN = function(x) summary(x))
mode(jul.jn$speed)
range(jul.jn$speed)
summary<- aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN = function(x) summary(x))
View(summary)
summary<- aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN = function(x) summary(x))
CV <- function(x, na.rm = FALSE) {
sd(x, na.rm=na.rm) / mean(x, na.rm=na.rm)
}
CV(jul.jn$speed)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN = function(x) CV(x))
max<- aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=max)
min <- aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=min)
max
(max$x-min$x)/2
max$x-min$x
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=max)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN = function(x) quantile(x, probs = 0.95))
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN = function(x) quantile(x, probs = 0.95))
mean(jul.jn$speed)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=mean)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN = function(x) quantile(x, probs = 0.95))
var(jul.jn$speed)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=var)
plot(aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=var))
var<- aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=var)
plot(var$x)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=mean)
boxplot(aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=mean))
mean<- aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=mean)
boxplot(mean$x)
boxplot(mean$x)
boxplot(mean$x)
max<- aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=max)
boxplot(max$x)
median<- aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=median)
boxplot(median$x)
var(median$x)
var(max$x)
var(mean$x)
hist(max$x)
hist(mean$x)
hist(median$x)
cv<-aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN = function(x) CV(x))
hist(cv$x)
sd(median$x)
sd(mean$x)
sd(max$x)
plot(max$x)
plot(mean$x)
plot(median$x)
plot(mean$x)
plot(max$x-mean$x)
plot(max$x)
plot(mean$x)
plot(max$x)
plot(median$x)
plot(max$x)
plot(mean$x)
boxplot(mean$x)
plot(jul.jn$speed)
mean(jul.jn$speed)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=max)
aggregate(jul.jn$speed, list(jul.jn$day, jul.jn$hour), FUN=mean)
mean$x
mean(jul.jn$speed)
mean$d <- mean$x-9.40
plot(mean$d)
mean$d
jul.jn <- jul.jn2
linea1.2 <- sf::st_linestring(rbind(c(-99.1879, 19.3468), c(-99.1862, 19.3512), c(-99.1852, 19.3547), c(-99.1840, 19.3583), c(-99.1827, 19.3619), c(-99.1817, 19.3650), c(-99.1804, 19.3690), c(-99.1787, 19.3742), c(-99.1772, 19.3793), c(-99.1760, 19.3826), c(-99.1752, 19.3855)))
linea1.1 <- sf::st_linestring(rbind(c(-99.1691, 19.2793),c(-99.1700, 19.2803), c(-99.1755, 19.2837), c(-99.1744, 19.2883), c(-99.1773, 19.2925), c(-99.1812, 19.2941), c(-99.1855, 19.2994), c(-99.1860, 19.3044), c(-99.1874, 19.3146), c(-99.1884, 19.3227), c(-99.1899, 19.3408)))
linea1.1.2<- sf::st_sfc(linea1.1, linea1.2)
linea1.1.2 = linea1.1.2 %>% sf::st_set_crs(4326) %>% sf::st_transform(32214)
linea1.1.2
linea1.1.2
linea1.1.2[1]
linea1.1.2[2]
version
install.packages("RQDA")
install.packages("rcommander")
install.packages("Rcommander")
install.packages("Rcmdr")
library(Rcmdr)
library(Rcmdr)
Rcmdr
library(Rcmdr)
library(Rcmdr)
library(Rcmdr)
Rcmdr::activateMenus()
Rcmdr::activeDataSet()
detach("package:Rcmdr", unload = TRUE)
detach("package:RcmdrMisc", unload = TRUE)
library(RcmdrMisc)
library(Rcmdr)
detach("package:Rcmdr", unload = TRUE)
detach("package:RcmdrMisc", unload = TRUE)
library(Rcmdr)
detach("package:RcmdrMisc", unload = TRUE)
library(RcmdrMisc)
install.packages("RcmdrMisc")
install.packages("RcmdrMisc")
library(Rcmdr)
library(RcmdrMisc)
library(Rcmdr)
library(RcmdrMisc)
library(Rcmdr)
version
version
library(Rcmdr)
detach("package:RcmdrMisc", unload = TRUE)
library(RcmdrMisc)
detach("package:Rcmdr", unload = TRUE)
library(Rcmdr)
detach("package:Rcmdr", unload = TRUE)
detach("package:RcmdrMisc", unload = TRUE)
Rcmdr::activateMenus()
Rcmdr
library(Rcmdr)
library(Rcmdr)
library(RcmdrMisc)
with(Chile, discretePlot(income, by=sex, scale="frequency"))
with(Chile, discretePlot(income, by=sex, scale="frequency"))
with(Chile, discretePlot(income, by=sex, scale="frequency"))
discretePlot(Chile$income, by=sex, scale="frequency")
discretePlot(Chile$income, by=Chile$sex, scale="frequency")
discretePlot(Chile$income, by=Chile$sex, scale="frequency")
discretePlot(Chile$income, by=Chile$sex, scale="frequency")
summary(Chile)
xtabs(~region+sex+vote, data=Chile)
with(Chile, discretePlot(income, by=sex, scale="frequency"))
with(Chile, discretePlot(income, by=sex, scale="frequency"))
library(Rcmdr)
library(RcmdrMisc)
with(Arrests, Hist(age, scale="frequency", breaks="Sturges",   col="darkgray"))
Arrests
View(Arrests)
MASS::abbey
MASS::Animals
MASS::UScrime
'MASS::UScrime
?MASS::UScrime
MASS::UScrime
?MASS::UScrime
MASS::Animals
?MASS::Animals
vector <- c(1,2,3,4,5)
vector <- as.data.frame(c(1,2,3,4,5))
View(vector)
View(vector)
vector
names(vector) <- "numero"
vector
install.packages("learnr")
install.packages("RQDA")
X <- rnorm(10)
plot(x)
y <- rnorm(10)
plot(x,y)
plot(y)
x <- rnorm(10)
plot(x,y)
hist(x)
pie(x)
plot(x, y, xlab="Diez numeros al azar", ylab="Otros diez numeros",
xlim=c(-2, 2), ylim=c(-2, 2), pch=22, col="red",
bg="yellow", bty="l", tcl=0.4,
main="Como personalizar un grafico en R", las=1, cex=1.5)
qplot(carat, price, data=diamonds)
library(ggplot)
library(ggplot2)
USArrests
pie(USArrests$UrbanPop)
pie(USArrests$Assault)
hist(USArrests$Murder)
